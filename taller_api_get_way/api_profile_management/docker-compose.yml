version: "3"

services:

  # zookeeper:  #administra el closter
  #   image: confluentinc/cp-zookeeper:latest
  #   container_name: zookeeper
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000


  # kafka:
  #   restart: always
  #   image: docker.io/bitnami/kafka:3.3
  #   ports:
  #     - "9093:9093"
  #   environment:
  #     - KAFKA_BROKER_ID=1
  #     - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
  #     - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
  #     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
  #   depends_on:
  #     - zookeeper

  db:
     image: postgres:latest
     restart: always
     ports:
       -  5433:5432
     environment:
        POSTGRES_DB: profile_db
        POSTGRES_USER: admin
        POSTGRES_PASSWORD: admin_password
        POSTGRES_HOST_AUTH_METHOD: trust
        
     volumes:
            
      #como el docker-compose esta dentro de la capeta taller_api_get_way usamos ./inicializar sql que nos lleva directamente al archivo
       - ./inicializar.sql:/docker-entrypoint-initdb.d/inicializar.sql
   

    
  # consumer:
  #   container_name: consumer
  #   build:
  #     context: ./consumidor
  #     dockerfile: Dockerfile
  #   environment:
  #     DB_NAME: authentication_db
  #     DB_USER: admin
  #     POSTGRES_PASSWORD: admin_password
  #     DATABASE_HOST: db
  #     DATABASE_PORT: 5432
  #     KAFKA_TOPIC_NAME: autenticacion-topic
  #     KAFKA_SERVER: kafka
  #     KAFKA_PORT: 9092
  #   ports:
  #     - 8001:8001
  #   restart: always
  #   depends_on:
  #     - zookeeper
  #     - kafka



version: "3"

services:
  zookeeper:  #administra el closter
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  
  #kafka:
   # image: 'bitnami/kafka:latest'

    
  #kafka:
  #broker-1
   # image: confluentinc/cp-kafka:latest
    #container_name: kafka-broker-1
    #depends_on:
    #  - zookeeper
    #environment:
    #  KAFKA_BROKER_ID: 1
    #  KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
    #  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
    #  KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
    #  KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    #  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    #  KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    #  KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

    #ports:
    #  - "9092:9092"
    #  - "9101:9101"

  kafka:
    restart: always
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9093:9093"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper

      


  db:
     image: postgres:latest
     restart: always
     ports:
       -  32000:3306
     environment:
        POSTGRES_DB: authentication_db
        POSTGRES_USER: admin
        POSTGRES_PASSWORD: admin_password
        POSTGRES_HOST_AUTH_METHOD: trust
        
     volumes:
       
       - ../punto_2/inicializar.sql:/docker-entrypoint-initdb.d/inicializar.sql
      #- ./postgres-vol:/var/lib/postgresql/data          #crea el volumen donde se van a persistir los datos en local y en el docker
      #- ./sql/inicializar.sql:/docker-entrypoint-initdb.d/inicializar.sql



  publisher:
    container_name: publisher
    build:
      context: ./productor
      dockerfile: Dockerfile
    environment:
      DB_NAME: authentication_db
      DB_USER: admin
      POSTGRES_PASSWORD: admin_password
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      KAFKA_TOPIC_NAME: autenticacion-topic
      KAFKA_SERVER: kafka
      KAFKA_PORT: 9092
    ports:
      - 5000:5000
    restart: always
    depends_on:
      - db
      - zookeeper
      - kafka


  consumer:
    container_name: consumer
    build:
      context: ./consumidor
      dockerfile: Dockerfile
    environment:
       KAFKA_TOPIC_NAME: autenticacion-topic
       KAFKA_SERVER: kafka
       KAFKA_PORT: 9092
    ports:
      - 8001:8001
    restart: always
    depends_on:
      - zookeeper
      - kafka


